C51 COMPILER V9.60.7.0   TASK_APP                                                          04/02/2025 15:51:49 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TASK_APP
OBJECT MODULE PLACED IN .\Objects\Task_App.obj
COMPILER INVOKED BY: D:\Keli5\C51\BIN\C51.EXE ..\User\Src\Task_App.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\User\Inc;..\Driv
                    -er\Inc;.\SYS) DEBUG OBJECTEXTEND PRINT(.\Listings\Task_App.lst) OBJECT(.\Objects\Task_App.obj)

line level    source

   1          /**
   2           * @file Task_App.c
   3           * @author 九千九百九十九
   4           * @brief 此为任务的声明和建立，用于优化主函数的视觉，让其更加简介，当然如果你愿意。可以将这些都写在main.c
             -中
   5           * @version 0.2
   6           * @date 2025-03-31
   7           * 
   8           * @copyright Copyright (c) 2025
   9           * 
  10           */
  11          #include "Task_App.h"
  12          
  13          /*Task1 Creation Key*/
  14          void Task_Key(void)
  15          {
  16   1          static uint8_t Key_Val;
  17   1          static uint8_t Key_Down;
  18   1          static uint8_t Key_Up;
  19   1          static uint8_t Key_Old = 0; //该值初始给0 避免警告
  20   1          static bit Test_Flag = 0;
  21   1      
  22   1          Key_Val = Key_Read();
  23   1          Key_Down = Key_Val & (Key_Val ^ Key_Old);
  24   1          Key_Up = ~Key_Val & (Key_Val ^ Key_Old);
  25   1          Key_Old = Key_Val;
  26   1      
  27   1          /*Test*/
  28   1      
  29   1          switch (Key_Down)
  30   1          {
  31   2              case 8:
  32   2                  Test_Flag ^= 1;
  33   2                  memset(ucLed, Test_Flag, 8);
  34   2                  break;
  35   2              case 4: // 上一级菜单
  36   2                  Menu_MoveParent();
  37   2                  break;
  38   2      
  39   2              case 5: //下一级菜单
  40   2                  Menu_MoveChild();
  41   2                  break;
  42   2      
  43   2              case 6: //同一级 下一个菜单
  44   2                  Menu_MoveNext();
  45   2                  break;
  46   2      
  47   2              case 7: //同一级 上一个菜单
  48   2                  Menu_MovePrev();
  49   2                  break;
  50   2          }
  51   1      }
  52          
  53          /*Task2 Creation Seg Led*/
C51 COMPILER V9.60.7.0   TASK_APP                                                          04/02/2025 15:51:49 PAGE 2   

  54          void Task_Disp(void)
  55          {
  56   1          uint8_t Scan = Mysystick % 8; //显示扫描变量 只在0――7周期变
  57   1      
  58   1          Seg_Disp(Scan, Seg_Buf[Scan], Seg_Point[Scan]); //数码管显示
  59   1          LED_Disp(Scan, ucLed[Scan]); //LED显示
  60   1      }
  61          
  62          /*Task3 Creation NE555*/
  63          void Task_NE555(void)
  64          {
  65   1          TR0 = 0; //关闭TIM0计数
  66   1          ET1 = 0; //关闭TIM1中断允许
  67   1          Freq = TH0 << 8 | TL0; //获取频率
  68   1          TH0 = TL0 = 0; //手动清空计数值
  69   1          ET1 = 1; //打开TIM1中断允许
  70   1          TR0 = 1; //开启TIM0计数
  71   1      }
  72          
  73          /*Task4 Creation Buzz Motor Relay*/
  74          void Task_Periph(void)
  75          {
  76   1          static bit Flag_Buzz = 0;
  77   1          static bit Flag_Relay = 1;
  78   1      
  79   1          Periph_Set(BUZZ, Flag_Buzz);
  80   1          Periph_Set(RELAY, Flag_Relay);
  81   1      
  82   1          //500ms翻转一次继电器和蜂鸣器的电平
  83   1          Flag_Buzz ^= 1;
  84   1          Flag_Relay ^= 1;
  85   1      }
  86          
  87          /*Task5 Creation DS1302*/
  88          void Task_RTC(void)
  89          {
  90   1          RTC_Read(ucRTC);
  91   1      }
  92          
  93          /*Task6 Creation DS18B20*/
  94          void Task_Ds18b20(void)
  95          {
  96   1          temperature = Read_temperature(); //获取温度
  97   1      }
  98          
  99          /*Task7 Creation Ultrasonic*/
 100          void Task_Ul(void)
 101          {
 102   1          Distance = Distance_Get(); //获取距离
 103   1      }
 104          
 105          /*Task8 Creation Serial*/
 106          void Task_Serial(void)
 107          {
 108   1          static uint8_t psc = 0; //分频器 每1s发送一次
 109   1      
 110   1          /*模拟串口发送数据 这里是1s打印一个数据*/
 111   1          if (++psc == 4)
 112   1          {
 113   2              psc = 0;
 114   2              printf("systime:%d\r\n", (uint16_t)(Mysystick / 1000));
 115   2          }
C51 COMPILER V9.60.7.0   TASK_APP                                                          04/02/2025 15:51:49 PAGE 3   

 116   1      
 117   1          if (Serial_Idle_Cnt > 300) //300ms没接受到数据就会解析一次 这里可以自行调整
 118   1          {
 119   2              /*串口解析操作*/
 120   2              if (RxData[0] == '1')
 121   2              {
 122   3                  static bit i = 0;
 123   3                  index = 0;
 124   3                  RxData[0] = 0;
 125   3                  memset(ucLed, i, 8);
 126   3                  i ^= 1;
 127   3              }
 128   2          }
 129   1      }
 130          
 131          /*Task9 Creation PCF8591*/
 132          void Task_PCF8591(void)
 133          {
 134   1          Adval1 = AD_Read(0x41); //电位器
 135   1          Adval2 = AD_Read(0x43); //光敏
 136   1      }
 137          
 138          void Task_Seg(void)
 139          {
 140   1          static menu_node_t *p = NULL; //存储上一次的节点 用于判断是否需要清空显存
 141   1          if (!p) p = current_menu; //第一次没有值 就赋值到current_menu
 142   1      
 143   1          if (p != current_menu) //如果更改了界面，则刷新一次显存
 144   1          {
 145   2              memset(Seg_Buf, 10, 8); // 清空显示缓冲区
 146   2              memset(Seg_Point, 0, 8); // 清除所有小数点
 147   2              p = current_menu;
 148   2          }
 149   1      
 150   1          Menu_Update();
 151   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    399    ----
   CONSTANT SIZE    =     13    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
